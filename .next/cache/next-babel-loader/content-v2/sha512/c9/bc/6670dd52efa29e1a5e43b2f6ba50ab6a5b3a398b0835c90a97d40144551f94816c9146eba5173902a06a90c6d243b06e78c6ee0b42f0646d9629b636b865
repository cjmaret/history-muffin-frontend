{"ast":null,"code":"import _regeneratorRuntime from \"/Users/colinmaretsky/dev/wes-bos/e-commerce-site/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/colinmaretsky/dev/wes-bos/e-commerce-site/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/colinmaretsky/dev/wes-bos/e-commerce-site/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/colinmaretsky/dev/wes-bos/e-commerce-site/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/colinmaretsky/dev/wes-bos/e-commerce-site/frontend/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_ORDER_MUTATION($token: String!) {\\n    checkout(token: $token) {\\n      id\\n      charge\\n      total\\n      items {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useRouter } from 'next/dist/client/router';\nimport SickButton from './styles/SickButton';\nimport { useCart } from '../lib/cartState';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nexport var CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n  var router = useRouter();\n\n  var _useCart = useCart(),\n      closeCart = _useCart.closeCart;\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQLError = _useMutation2[1].error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true); // 2. start the page transition\n\n              nProgress.start(); // 3. create the payment method via stripe (Token comes back here if successful)\n\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); // 4. handle any errors from stripe\n\n              if (!error) {\n                _context.next = 13;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 13:\n              _context.next = 15;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 15:\n              order = _context.sent;\n              console.log('finished order!');\n              console.log(order); // 6. change the page to view the order\n\n              router.push({\n                pathname: \"/order/[id]\",\n                query: {\n                  id: order.data.checkout.id\n                }\n              }); // 7. close the cart\n\n              closeCart(); // 8. turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: graphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"PT0aX24zQJy0A63MUjzoXGuldKk=\", false, function () {\n  return [useStripe, useElements, useRouter, useCart, useMutation];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["/Users/colinmaretsky/dev/wes-bos/e-commerce-site/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","useState","nProgress","useMutation","gql","useRouter","SickButton","useCart","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","router","closeCart","checkout","graphQLError","handleSubmit","e","preventDefault","start","createPaymentMethod","type","card","getElement","paymentMethod","console","log","done","variables","token","id","order","push","pathname","query","data","message","Checkout"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport {\n  CardElement,\n  Elements,\n  useElements,\n  useStripe,\n} from '@stripe/react-stripe-js';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useRouter } from 'next/dist/client/router';\nimport SickButton from './styles/SickButton';\nimport { useCart } from '../lib/cartState';\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nexport const CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const router = useRouter();\n  const { closeCart } = useCart();\n  const [checkout, { error: graphQLError }] = useMutation(\n    CREATE_ORDER_MUTATION\n  );\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n\n    // 2. start the page transition\n    nProgress.start();\n\n    // 3. create the payment method via stripe (Token comes back here if successful)\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n\n    console.log(paymentMethod);\n\n    // 4. handle any errors from stripe\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return; // stops the checkout from happening\n    }\n\n    // 5. send the token from step 4 to our keystone server, via a custom mutation\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id,\n      },\n    });\n\n    console.log('finished order!');\n    console.log(order);\n\n    // 6. change the page to view the order\n\n    router.push({\n      pathname: `/order/[id]`,\n      query: {\n        id: order.data.checkout.id,\n      },\n    });\n\n    // 7. close the cart\n\n    closeCart();\n\n    // 8. turn the loader off\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      {error && <p>{error.message}</p>}\n      {graphQLError && <p>{graphQLError.message}</p>}\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}